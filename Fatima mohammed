def solution():
    pass


def main():
 IP = input('\nPlease Type The IP address :' )
   
 def __init__(self,IP=""):
    self.IPForm=[0,0,0,0]
    self.ipmask= IP.split("/")
    self.splitMask = self.ipmask[1]
    self.SpltIP = self.ipmask[0].split('.')

    for index in range(len(self.SpltIP)):# do checkup on the IP
        self.IPForm[index] = int(self.splitIP[index])
        if self.IPForm[index] > 255: raise ValueError
        if index > 3 :
            error = ValueError()
            error.strerror = "Value  in each octet must be less than or equal Three digit."
            raise error
          


def CLassType(self,splitIP=""):
     self.octat1=self.splitIP[0]
     if self.octat1 in range(1,127):
       return print("class :A")
     elif self. octat1 in range(128,191):
       return print("class :B")
     elif self.octat1 in range(192,223):
       return print("class :C")
     elif self.octat1 in range(224,239):
        return print("class :D")
     elif self.octat1 in range(240,255):
       return print("class :E")


def Designation(self,splitIP=""):
     self.desig=""
     first_oct=self.splitIP[0]
     second_oct=self.splitIP[1]
     #-----------------------------
     # 172.16.0.0 to 172.31.255.255
     if first_oct==172:
         if second_oct >=16 and  second_oct <=31:
             self.desig="Private _IP "
     #----------------
     #10.0.0.0 to 10.255.255.255
     
     elif first_oct==10 or first_oct ==169:
         self.desig="Private _IP "
     #-----------------------
     #192.168.0.0 to 192.168.255.255
     elif first_oct==192 and  second_oct==168:
        self.desig="Private _IP "
    #_----------------------------------------
     #192.0.0.0 to 223.255.255.0
     elif first_oct >=192 and  first_oct <=223:
         self.desig="Public _IP "
     elif first_oct >=128 and  first_oct <=191:
        self.desig="Public _IP "
        #----------------------------
        #1.0.0.0 to 127.0.0.0
     elif first_oct >=1 and first_oct <=127:
            self.desig="Public _IP "
     else :
           self.desig="special _IP "        
     return self.desig

     if __name__ == '__main__':
       print(f" classes{CLassType},Designation is {Designation}")

